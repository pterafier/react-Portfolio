{"version":3,"file":"static/js/reactPlayerHls.eece3dec.chunk.js","mappings":"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","sources":["../node_modules/hls-video-element/dist/hls-video-element.js","../node_modules/hls-video-element/dist/react.js"],"sourcesContent":["import { CustomVideoElement } from \"custom-media-element\";\nimport { MediaTracksMixin } from \"media-tracks\";\nimport Hls from \"hls.js/dist/hls.mjs\";\nconst HlsVideoMixin = (superclass) => {\n  return class HlsVideo extends superclass {\n    static shadowRootOptions = { ...superclass.shadowRootOptions };\n    static getTemplateHTML = (attrs, props = {}) => {\n      const { src, ...rest } = attrs;\n      return `\n        <script type=\"application/json\" id=\"config\">\n          ${JSON.stringify(props.config || {})}\n        </script>\n        ${superclass.getTemplateHTML(rest)}\n      `;\n    };\n    #airplaySourceEl = null;\n    #config = null;\n    constructor() {\n      super();\n      this.#upgradeProperty(\"config\");\n    }\n    get config() {\n      return this.#config;\n    }\n    set config(value) {\n      this.#config = value;\n    }\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      if (attrName !== \"src\") {\n        super.attributeChangedCallback(attrName, oldValue, newValue);\n      }\n      if (attrName === \"src\" && oldValue != newValue) {\n        this.load();\n      }\n    }\n    #destroy() {\n      var _a, _b;\n      (_a = this.#airplaySourceEl) == null ? void 0 : _a.remove();\n      (_b = this.nativeEl) == null ? void 0 : _b.removeEventListener(\n        \"webkitcurrentplaybacktargetiswirelesschanged\",\n        this.#toggleHlsLoad\n      );\n      if (this.api) {\n        this.api.detachMedia();\n        this.api.destroy();\n        this.api = null;\n      }\n    }\n    async load() {\n      var _a, _b;\n      const isFirstLoad = !this.api;\n      this.#destroy();\n      if (!this.src) {\n        return;\n      }\n      if (isFirstLoad && !this.#config) {\n        this.#config = JSON.parse(((_a = this.shadowRoot.getElementById(\"config\")) == null ? void 0 : _a.textContent) || \"{}\");\n      }\n      if (Hls.isSupported()) {\n        await Promise.resolve();\n        this.api = new Hls({\n          // Mimic the media element with an Infinity duration for live streams.\n          liveDurationInfinity: true,\n          // Disable auto quality level/fragment loading.\n          autoStartLoad: false,\n          // Custom configuration for hls.js.\n          ...this.config\n        });\n        this.api.loadSource(this.src);\n        this.api.attachMedia(this.nativeEl);\n        switch (this.nativeEl.preload) {\n          case \"none\": {\n            const loadSourceOnPlay = () => this.api.startLoad();\n            this.nativeEl.addEventListener(\"play\", loadSourceOnPlay, {\n              once: true\n            });\n            this.api.on(Hls.Events.DESTROYING, () => {\n              this.nativeEl.removeEventListener(\"play\", loadSourceOnPlay);\n            });\n            break;\n          }\n          case \"metadata\": {\n            const originalLength = this.api.config.maxBufferLength;\n            const originalSize = this.api.config.maxBufferSize;\n            this.api.config.maxBufferLength = 1;\n            this.api.config.maxBufferSize = 1;\n            const increaseBufferOnPlay = () => {\n              this.api.config.maxBufferLength = originalLength;\n              this.api.config.maxBufferSize = originalSize;\n            };\n            this.nativeEl.addEventListener(\"play\", increaseBufferOnPlay, {\n              once: true\n            });\n            this.api.on(Hls.Events.DESTROYING, () => {\n              this.nativeEl.removeEventListener(\"play\", increaseBufferOnPlay);\n            });\n            this.api.startLoad();\n            break;\n          }\n          default:\n            this.api.startLoad();\n        }\n        if (this.nativeEl.webkitCurrentPlaybackTargetIsWireless) {\n          this.api.stopLoad();\n        }\n        this.nativeEl.addEventListener(\n          \"webkitcurrentplaybacktargetiswirelesschanged\",\n          this.#toggleHlsLoad\n        );\n        this.#airplaySourceEl = document.createElement(\"source\");\n        this.#airplaySourceEl.setAttribute(\"type\", \"application/x-mpegURL\");\n        this.#airplaySourceEl.setAttribute(\"src\", this.src);\n        this.nativeEl.disableRemotePlayback = false;\n        this.nativeEl.append(this.#airplaySourceEl);\n        const levelIdMap = /* @__PURE__ */ new WeakMap();\n        this.api.on(Hls.Events.MANIFEST_PARSED, (event, data) => {\n          if (this.nativeEl.autoplay && this.nativeEl.paused) {\n            this.nativeEl.play().catch((err) => {\n              console.warn(\"Autoplay failed:\", err);\n            });\n          }\n          removeAllMediaTracks();\n          let videoTrack = this.videoTracks.getTrackById(\"main\");\n          if (!videoTrack) {\n            videoTrack = this.addVideoTrack(\"main\");\n            videoTrack.id = \"main\";\n            videoTrack.selected = true;\n          }\n          for (const [id, level] of data.levels.entries()) {\n            const videoRendition = videoTrack.addRendition(\n              level.url[0],\n              level.width,\n              level.height,\n              level.videoCodec,\n              level.bitrate\n            );\n            levelIdMap.set(level, `${id}`);\n            videoRendition.id = `${id}`;\n          }\n          for (let [id, a] of data.audioTracks.entries()) {\n            const kind = a.default ? \"main\" : \"alternative\";\n            const audioTrack = this.addAudioTrack(kind, a.name, a.lang);\n            audioTrack.id = `${id}`;\n            if (a.default) {\n              audioTrack.enabled = true;\n            }\n          }\n        });\n        this.audioTracks.addEventListener(\"change\", () => {\n          var _a2;\n          const audioTrackId = +((_a2 = [...this.audioTracks].find((t) => t.enabled)) == null ? void 0 : _a2.id);\n          const availableIds = this.api.audioTracks.map((t) => t.id);\n          if (audioTrackId != this.api.audioTrack && availableIds.includes(audioTrackId)) {\n            this.api.audioTrack = audioTrackId;\n          }\n        });\n        this.api.on(Hls.Events.LEVELS_UPDATED, (event, data) => {\n          const videoTrack = this.videoTracks[this.videoTracks.selectedIndex ?? 0];\n          if (!videoTrack) return;\n          const levelIds = data.levels.map((l) => levelIdMap.get(l));\n          for (const rendition of this.videoRenditions) {\n            if (rendition.id && !levelIds.includes(rendition.id)) {\n              videoTrack.removeRendition(rendition);\n            }\n          }\n        });\n        const switchRendition = (event) => {\n          const level = event.target.selectedIndex;\n          if (level != this.api.nextLevel) {\n            this.api.nextLevel = level;\n          }\n        };\n        (_b = this.videoRenditions) == null ? void 0 : _b.addEventListener(\"change\", switchRendition);\n        const removeAllMediaTracks = () => {\n          for (const videoTrack of this.videoTracks) {\n            this.removeVideoTrack(videoTrack);\n          }\n          for (const audioTrack of this.audioTracks) {\n            this.removeAudioTrack(audioTrack);\n          }\n        };\n        this.api.once(Hls.Events.DESTROYING, removeAllMediaTracks);\n        return;\n      }\n      await Promise.resolve();\n      if (this.nativeEl.canPlayType(\"application/vnd.apple.mpegurl\")) {\n        this.nativeEl.src = this.src;\n      }\n    }\n    #toggleHlsLoad = () => {\n      var _a, _b, _c;\n      if ((_a = this.nativeEl) == null ? void 0 : _a.webkitCurrentPlaybackTargetIsWireless) {\n        (_b = this.api) == null ? void 0 : _b.stopLoad();\n      } else {\n        (_c = this.api) == null ? void 0 : _c.startLoad();\n      }\n    };\n    // This is a pattern to update property values that are set before\n    // the custom element is upgraded.\n    // https://web.dev/custom-elements-best-practices/#make-properties-lazy\n    #upgradeProperty(prop) {\n      if (Object.prototype.hasOwnProperty.call(this, prop)) {\n        const value = this[prop];\n        delete this[prop];\n        this[prop] = value;\n      }\n    }\n  };\n};\nconst HlsVideoElement = HlsVideoMixin(MediaTracksMixin(CustomVideoElement));\nif (globalThis.customElements && !globalThis.customElements.get(\"hls-video\")) {\n  globalThis.customElements.define(\"hls-video\", HlsVideoElement);\n}\nvar hls_video_element_default = HlsVideoElement;\nexport {\n  Hls,\n  HlsVideoElement,\n  HlsVideoMixin,\n  hls_video_element_default as default\n};\n","\"use client\";\n\n// dist/react.ts\nimport React from \"react\";\nimport CustomMediaElement from \"./hls-video-element.js\";\n\n// ../../node_modules/ce-la-react/dist/ce-la-react.js\nvar reservedReactProps = /* @__PURE__ */ new Set([\n  \"style\",\n  \"children\",\n  \"ref\",\n  \"key\",\n  \"suppressContentEditableWarning\",\n  \"suppressHydrationWarning\",\n  \"dangerouslySetInnerHTML\"\n]);\nvar reactPropToAttrNameMap = {\n  className: \"class\",\n  htmlFor: \"for\"\n};\nfunction defaultToAttributeName(propName) {\n  return propName.toLowerCase();\n}\nfunction defaultToAttributeValue(propValue) {\n  if (typeof propValue === \"boolean\") return propValue ? \"\" : void 0;\n  if (typeof propValue === \"function\") return void 0;\n  if (typeof propValue === \"object\" && propValue !== null) return void 0;\n  return propValue;\n}\nfunction createComponent({\n  react: React2,\n  tagName,\n  elementClass,\n  events,\n  displayName,\n  defaultProps,\n  toAttributeName = defaultToAttributeName,\n  toAttributeValue = defaultToAttributeValue\n}) {\n  const IS_REACT_19_OR_NEWER = Number.parseInt(React2.version) >= 19;\n  const ReactComponent = React2.forwardRef((props, ref) => {\n    var _a, _b;\n    const elementRef = React2.useRef(null);\n    const prevElemPropsRef = React2.useRef(/* @__PURE__ */ new Map());\n    const eventProps = {};\n    const attrs = {};\n    const reactProps = {};\n    const elementProps = {};\n    for (const [k, v] of Object.entries(props)) {\n      if (reservedReactProps.has(k)) {\n        reactProps[k] = v;\n        continue;\n      }\n      const attrName = toAttributeName(reactPropToAttrNameMap[k] ?? k);\n      if (elementClass.prototype && k in elementClass.prototype && !(k in (((_a = globalThis.HTMLElement) == null ? void 0 : _a.prototype) ?? {})) && !((_b = elementClass.observedAttributes) == null ? void 0 : _b.some((attr) => attr === attrName))) {\n        elementProps[k] = v;\n        continue;\n      }\n      if (k.startsWith(\"on\")) {\n        eventProps[k] = v;\n        continue;\n      }\n      const attrValue = toAttributeValue(v);\n      if (attrName && attrValue != null) {\n        attrs[attrName] = String(attrValue);\n        if (!IS_REACT_19_OR_NEWER) {\n          reactProps[attrName] = attrValue;\n        }\n      }\n      if (attrName && IS_REACT_19_OR_NEWER) {\n        const attrValueFromDefault = defaultToAttributeValue(v);\n        if (attrValue !== attrValueFromDefault) {\n          reactProps[attrName] = attrValue;\n        } else {\n          reactProps[attrName] = v;\n        }\n      }\n    }\n    if (typeof window !== \"undefined\") {\n      for (const propName in eventProps) {\n        const callback = eventProps[propName];\n        const useCapture = propName.endsWith(\"Capture\");\n        const eventName = ((events == null ? void 0 : events[propName]) ?? propName.slice(2).toLowerCase()).slice(\n          0,\n          useCapture ? -7 : void 0\n        );\n        React2.useLayoutEffect(() => {\n          const eventTarget = elementRef == null ? void 0 : elementRef.current;\n          if (!eventTarget || typeof callback !== \"function\") return;\n          eventTarget.addEventListener(eventName, callback, useCapture);\n          return () => {\n            eventTarget.removeEventListener(eventName, callback, useCapture);\n          };\n        }, [elementRef == null ? void 0 : elementRef.current, callback]);\n      }\n      React2.useLayoutEffect(() => {\n        if (elementRef.current === null) return;\n        const newElemProps = /* @__PURE__ */ new Map();\n        for (const key in elementProps) {\n          setProperty(elementRef.current, key, elementProps[key]);\n          prevElemPropsRef.current.delete(key);\n          newElemProps.set(key, elementProps[key]);\n        }\n        for (const [key, _value] of prevElemPropsRef.current) {\n          setProperty(elementRef.current, key, void 0);\n        }\n        prevElemPropsRef.current = newElemProps;\n      });\n    }\n    if (typeof window === \"undefined\" && (elementClass == null ? void 0 : elementClass.getTemplateHTML) && (elementClass == null ? void 0 : elementClass.shadowRootOptions)) {\n      const { mode, delegatesFocus } = elementClass.shadowRootOptions;\n      const templateShadowRoot = React2.createElement(\"template\", {\n        shadowrootmode: mode,\n        shadowrootdelegatesfocus: delegatesFocus,\n        dangerouslySetInnerHTML: {\n          __html: elementClass.getTemplateHTML(attrs, props)\n        }\n      });\n      reactProps.children = [templateShadowRoot, reactProps.children];\n    }\n    return React2.createElement(tagName, {\n      ...defaultProps,\n      ...reactProps,\n      ref: React2.useCallback(\n        (node) => {\n          elementRef.current = node;\n          if (typeof ref === \"function\") {\n            ref(node);\n          } else if (ref !== null) {\n            ref.current = node;\n          }\n        },\n        [ref]\n      )\n    });\n  });\n  ReactComponent.displayName = displayName ?? elementClass.name;\n  return ReactComponent;\n}\nfunction setProperty(node, name, value) {\n  var _a;\n  node[name] = value;\n  if (value == null && name in (((_a = globalThis.HTMLElement) == null ? void 0 : _a.prototype) ?? {})) {\n    node.removeAttribute(name);\n  }\n}\n\n// dist/react.ts\nvar react_default = createComponent({\n  react: React,\n  tagName: \"hls-video\",\n  elementClass: CustomMediaElement,\n  toAttributeName(propName) {\n    if (propName === \"muted\") return \"\";\n    if (propName === \"defaultMuted\") return \"muted\";\n    return defaultToAttributeName(propName);\n  }\n});\nexport {\n  react_default as default\n};\n/*! Bundled license information:\n\nce-la-react/dist/ce-la-react.js:\n  (**\n   * @license\n   * Copyright 2018 Google LLC\n   * SPDX-License-Identifier: BSD-3-Clause\n   *\n   * Modified version of `@lit/react` for vanilla custom elements with support for SSR.\n   *)\n*/\n"],"names":["HlsVideoElement","superclass","_HlsVideo","_airplaySourceEl","_config","_HlsVideo_brand","_toggleHlsLoad","WeakMap","WeakSet","constructor","super","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_a","_b","_c","this","nativeEl","webkitCurrentPlaybackTargetIsWireless","api","stopLoad","startLoad","_assertClassBrand","_upgradeProperty","call","config","_classPrivateFieldGet","value","_classPrivateFieldSet","attributeChangedCallback","attrName","oldValue","newValue","load","isFirstLoad","_destroy","src","JSON","parse","shadowRoot","getElementById","textContent","Hls","Promise","resolve","_objectSpread","liveDurationInfinity","autoStartLoad","loadSource","attachMedia","preload","loadSourceOnPlay","addEventListener","once","on","DESTROYING","removeEventListener","originalLength","maxBufferLength","originalSize","maxBufferSize","increaseBufferOnPlay","document","createElement","setAttribute","disableRemotePlayback","append","levelIdMap","MANIFEST_PARSED","event","data","autoplay","paused","play","catch","err","console","warn","removeAllMediaTracks","videoTrack","videoTracks","getTrackById","addVideoTrack","id","selected","level","levels","entries","videoRendition","addRendition","url","width","height","videoCodec","bitrate","set","concat","a","audioTracks","kind","default","audioTrack","addAudioTrack","name","lang","enabled","_a2","audioTrackId","find","t","availableIds","map","includes","LEVELS_UPDATED","_this$videoTracks$sel","selectedIndex","levelIds","l","get","rendition","videoRenditions","removeRendition","switchRendition","target","nextLevel","removeVideoTrack","removeAudioTrack","canPlayType","_defineProperty","shadowRootOptions","attrs","props","arguments","length","undefined","rest","_objectWithoutProperties","_excluded","stringify","getTemplateHTML","remove","detachMedia","destroy","prop","Object","prototype","hasOwnProperty","HlsVideoMixin","MediaTracksMixin","CustomVideoElement","globalThis","customElements","define","hls_video_element_default","reservedReactProps","Set","reactPropToAttrNameMap","className","htmlFor","defaultToAttributeName","propName","toLowerCase","defaultToAttributeValue","propValue","setProperty","node","_ref4","HTMLElement","removeAttribute","react_default","_ref","react","React2","tagName","elementClass","events","displayName","defaultProps","toAttributeName","toAttributeValue","IS_REACT_19_OR_NEWER","Number","parseInt","version","ReactComponent","forwardRef","ref","elementRef","useRef","prevElemPropsRef","Map","eventProps","reactProps","elementProps","k","v","_reactPropToAttrNameM","_ref2","has","observedAttributes","some","attr","startsWith","attrValue","String","attrValueFromDefault","window","_ref3","callback","useCapture","endsWith","eventName","slice","useLayoutEffect","eventTarget","current","newElemProps","key","delete","_value","mode","delegatesFocus","templateShadowRoot","shadowrootmode","shadowrootdelegatesfocus","dangerouslySetInnerHTML","__html","children","useCallback","createComponent","React","CustomMediaElement"],"sourceRoot":""}